# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(PipeDemo LANGUAGES CXX CUDA)

# target
add_executable(PipeDemo "")
set_target_properties(PipeDemo PROPERTIES OUTPUT_NAME "PipeDemo")
set_target_properties(PipeDemo PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(PipeDemo PRIVATE
    /usr/local/tensorrt/include
    /home/laugh/Projects/TensorRT-YOLO/include
    /home/laugh/Projects/VideoPipe
    /usr/local/cuda/include
)
target_include_directories(PipeDemo SYSTEM PRIVATE
    /usr/local/include/opencv4
    /usr/include/libdrm
    /usr/include/gstreamer-1.0
    /usr/include/x86_64-linux-gnu
    /usr/include/glib-2.0
    /usr/lib/x86_64-linux-gnu/glib-2.0/include
)
target_compile_options(PipeDemo PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:C>:-pthread>
    $<$<COMPILE_LANGUAGE:CXX>:-pthread>
    $<$<COMPILE_LANGUAGE:CUDA>:-allow-unsupported-compiler>
    $<$<COMPILE_LANGUAGE:CUDA>:-m64>
    $<$<COMPILE_LANGUAGE:CUDA>:-rdc=true>
    $<$<COMPILE_LANGUAGE:CUDA>:-gencode arch=compute_75,code=sm_75>
)
set_target_properties(PipeDemo PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(PipeDemo PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(PipeDemo PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(PipeDemo PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(PipeDemo PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET PipeDemo PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(PipeDemo PRIVATE
    nvinfer
    nvinfer_plugin
    nvonnxparser
    deploy
    video_pipe
    tinyexpr
    opencv_gapi
    opencv_stitching
    opencv_aruco
    opencv_bgsegm
    opencv_bioinspired
    opencv_ccalib
    opencv_cudabgsegm
    opencv_cudafeatures2d
    opencv_cudaobjdetect
    opencv_cudastereo
    opencv_dnn_objdetect
    opencv_dnn_superres
    opencv_dpm
    opencv_face
    opencv_freetype
    opencv_fuzzy
    opencv_hdf
    opencv_hfs
    opencv_img_hash
    opencv_intensity_transform
    opencv_line_descriptor
    opencv_mcc
    opencv_quality
    opencv_rapid
    opencv_reg
    opencv_rgbd
    opencv_saliency
    opencv_signal
    opencv_stereo
    opencv_structured_light
    opencv_phase_unwrapping
    opencv_superres
    opencv_surface_matching
    opencv_tracking
    opencv_highgui
    opencv_datasets
    opencv_text
    opencv_plot
    opencv_videostab
    opencv_cudaoptflow
    opencv_optflow
    opencv_cudalegacy
    opencv_videoio
    opencv_cudawarping
    opencv_wechat_qrcode
    opencv_xfeatures2d
    opencv_shape
    opencv_ml
    opencv_ximgproc
    opencv_video
    opencv_xobjdetect
    opencv_objdetect
    opencv_calib3d
    opencv_imgcodecs
    opencv_features2d
    opencv_dnn
    opencv_flann
    opencv_xphoto
    opencv_photo
    opencv_cudaimgproc
    opencv_cudafilters
    opencv_imgproc
    opencv_cudaarithm
    opencv_core
    opencv_cudev
    drm
    gstreamer-1.0
    gobject-2.0
    glib-2.0
    cudadevrt
    cudart_static
    rt
    pthread
    dl
)
target_link_directories(PipeDemo PRIVATE
    /usr/local/tensorrt/lib
    /home/laugh/Projects/TensorRT-YOLO/lib
    /home/laugh/Projects/VideoPipe/build/libs
    /usr/local/cuda/lib64
    /usr/local/lib
)
target_link_options(PipeDemo PRIVATE
    -m64
)
target_sources(PipeDemo PRIVATE
    src/main.cpp
    src/vp_trtyolo_detector.cpp
)

